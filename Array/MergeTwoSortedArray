Merge two sorted arrays
Ayush Mishra — 08/14/2022
first array - 1 3 4 7 11
second array - 2 4 6 13
1 2 3 4 4 6 7 11 13
HarshPrakash — 08/14/2022
vector<int> mergeSorted(vector<int> arr1, vector<int> arr2){

    vector<int> res;

     int i  = 0;
     int j = 0 ;

     while (i != arr1.size() && j != arr2.size()){

            if(arr1[i] > arr2[j]){
                res.push_back(arr2[j]);
                j++;
            }
            else if(arr1[i] == arr2[j]){
                res.push_back(arr1[i]);
                res.push_back(arr2[j]);
                i++;
                j++;
            }
            else{
                res.push_back(arr1[i]);
                i++;
            }

     }
    return res;

}
HarshPrakash — 08/15/2022
vector<int> mergeSorted(vector<int> arr1, vector<int> arr2){

    vector<int> res;

     int i  = 0;
     int j = 0 ;

     while (i != arr1.size() && j != arr2.size()){

            if(arr1[i] > arr2[j]){
                res.push_back(arr2[j]);
                j++;
            }
            else if(arr1[i] == arr2[j]){
                res.push_back(arr1[i]);
                res.push_back(arr2[j]);
                i++;
                j++;
            }
            else{
                res.push_back(arr1[i]);
                i++;
            }

     }

     if(i != arr1.size()){
         for (int k = i ; k < arr1.size(); k++){
             res.push_back(arr1[k]);
         }
     }

     if(j != arr2.size()){
         for (int k = j ; k < arr2.size(); k++){
             res.push_back(arr2[k]);
         }
     }

    return res;

}
1 2 3 6 8 11 12 12 16 17 19
Ayush Mishra — 08/15/2022
public class Practice {



    public static int [] Merge(int arr1[], int arr2[])
    {

        int i = 0;
        int j = 0;
        int k = 0;
        int ans [] = new int[arr1.length + arr2.length];

        while(i < arr1.length && j < arr2.length)
        {
            if (arr1[i] < arr2[j])
            {
                ans[k] = arr1[i];
                i++;
                k++;
            }
            else
            {
                ans[k] = ans[j];
                j++;
                k++;
            }
        }

        while(i < arr1.length)
        {
            ans[k] = arr1[i];
            i++;
            k++;
        }

        while(j < arr2.length)
        {
            ans[k] = arr2[j];
            j++;
            k++;
        }
        return ans;
    }

    public static void main(String args[]) {

        int arr1[] = {1,3,6,11,12,17};
        int arr2[] = {1,3,6,11,12,17};

        int n[] = Merge(arr1, arr2);

        for(int i = 0; i < n.length; i++)
        {
            System.out.print(n[i] + " ");
        }


    }
}
Sumit — 08/15/2022
public class MyClass {
    public static void main(String args[]) {
      int[] a={0,3,3,7,8};
      int[] b={-9,0,3};
      int[] arr=merge(a,b);

      for(int i=0;i<arr.length;i++)
        System.out.print(arr[i]+" ");
    }

    static int[] merge(int[] a, int[] b){
        int[] arr=new int[a.length+b.length];
        int i=0;
        int j=0;
        int filled=0;


        while(i<a.length||j<b.length){

            if(i==a.length)
                arr[filled++]=b[j++];
            else if(j==b.length)
                arr[filled++]=a[i++];
            else if(a[i]<b[j]||a[i]==b[j])
                arr[filled++]=a[i++];
            else if(b[j]<a[i])
                arr[filled++]=b[j++];
        }

    return arr;
    }
}